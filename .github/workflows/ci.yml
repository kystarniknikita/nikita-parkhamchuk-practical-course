name: CI Pipeline

on:
  push:
    branches:
      - main
      - feature/**
    paths:
      - 'UserService/**'
  pull_request:
    branches:
      - main
    paths:
      - 'UserService/**'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Build project
        working-directory: UserService 
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test

  test:
    name: Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Run tests
        working-directory: UserService
        run: ./gradlew :user-service:test
    

      

  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: SonarQube analysis
        working-directory: UserService
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          chmod +x ./gradlew
          ./gradlew sonarqube \
            -Dsonar.projectKey=kystarniknikita_nikita-parkhamchuk-practical-course \
            -Dsonar.organization=kystarniknikita \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  docker:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: sonarqube
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        working-directory: UserService
        run: |
          docker build -t nikitakyst/user-service:latest .
          docker push nikitakyst/user-service:latest
