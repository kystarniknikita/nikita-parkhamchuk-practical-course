name: CI Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
      - feature/**

jobs:
  build:
    name:  Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Find gradlew path
        id: find_gradlew
        run: |
          GRADLEW_PATH=$(find . -name "gradlew" | head -n 1)
          if [ -z "$GRADLEW_PATH" ]; then
            echo " gradlew not found"
            exit 1
          fi
          echo " gradlew found at: $GRADLEW_PATH"
          GRADLEW_DIR=$(dirname "$GRADLEW_PATH")
          echo "GRADLEW_DIR=$GRADLEW_DIR" >> $GITHUB_ENV

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Build project
        run: |
          cd "$GRADLEW_DIR"
          chmod +x ./gradlew
          ./gradlew clean build -x test

  test:
    name: ✅ Run Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Find gradlew path
        id: find_gradlew
        run: |
          GRADLEW_PATH=$(find . -name "gradlew" | head -n 1)
          if [ -z "$GRADLEW_PATH" ]; then
            echo " gradlew not found"
            exit 1
          fi
          echo " gradlew found at: $GRADLEW_PATH"
          GRADLEW_DIR=$(dirname "$GRADLEW_PATH")
          echo "GRADLEW_DIR=$GRADLEW_DIR" >> $GITHUB_ENV

      - name: Run tests
        run: |
          cd "$GRADLEW_DIR"
          chmod +x ./gradlew
          ./gradlew test

      - name: Archive test reports
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: build/test-results/test

  sonarqube:
    name: 🔍 SonarQube Analysis
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Find gradlew path
        id: find_gradlew
        run: |
          GRADLEW_PATH=$(find . -name "gradlew" | head -n 1)
          if [ -z "$GRADLEW_PATH" ]; then
            echo " gradlew not found"
            exit 1
          fi
          echo " gradlew found at: $GRADLEW_PATH"
          GRADLEW_DIR=$(dirname "$GRADLEW_PATH")
          echo "GRADLEW_DIR=$GRADLEW_DIR" >> $GITHUB_ENV

      - name: Run SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd "$GRADLEW_DIR"
          chmod +x ./gradlew
          ./gradlew sonarqube \
            -Dsonar.projectKey=kystarniknikita_nikita-parkhamchuk-practical-course \
            -Dsonar.organization=kystarniknikita \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  docker:
    name:  Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: sonarqube
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Find gradlew path
        id: find_gradlew
        run: |
          GRADLEW_PATH=$(find . -name "gradlew" | head -n 1)
          GRADLEW_DIR=$(dirname "$GRADLEW_PATH")
          echo "GRADLEW_DIR=$GRADLEW_DIR" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          cd "$GRADLEW_DIR"
          docker build -t ${{ secrets.DOCKER_USER }}/user-service:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USER }}/user-service:latest
