name: CI Pipeline

on:
  push:
    branches:
      - main
      - feature/**
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build user-service
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17 (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Grant execute permission for Gradle wrapper
        working-directory: user-service
        run: chmod +x ./gradlew

      - name: Build project (skip tests)
        working-directory: user-service
        run: ./gradlew clean build -x test

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: user-service-jar
          path: user-service/build/libs/*.jar

  test:
    name: Run tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Grant execute permission for Gradle wrapper
        working-directory: user-service
        run: chmod +x ./gradlew

      - name: Run tests
        working-directory: user-service
        run: ./gradlew test

  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Grant execute permission for Gradle wrapper
        working-directory: user-service
        run: chmod +x ./gradlew

      - name: SonarCloud Scan
        working-directory: user-service
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./gradlew sonarqube \
            -Dsonar.projectKey=kystarniknikita_nikita-parkhamchuk-practical-course \
            -Dsonar.organization=kystarniknikita \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  docker:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: sonarqube
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        working-directory: user-service
        run: |
          docker build -t nikitakyst/user-service:latest .
          docker push nikitakyst/user-service:latest
